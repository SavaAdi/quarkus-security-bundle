quarkus.datasource.jdbc.url=jdbc:h2:mem:mydb
quarkus.datasource.db-kind=h2
quarkus.datasource.username=sa
quarkus.datasource.password=

quarkus.flyway.migrate-at-start=true

quarkus.security.jdbc.enabled=true

##### NOT PRODUCTION GRADE - BECAUSE CLEAR TEXT...

# Defines the query to validate the user and get the roles, must contain exactly one param and return at least the password
quarkus.security.jdbc.principal-query.sql=SELECT u.password, u.role FROM test_user u WHERE u.username=?

# The password is returned in cleartext
quarkus.security.jdbc.principal-query.clear-password-mapper.enabled=true

# Index is 1 based -> starts at 1
# Sets the index of the password
quarkus.security.jdbc.principal-query.clear-password-mapper.password-index=1

# Sets the index of the role
quarkus.security.jdbc.principal-query.attribute-mappings.0.index=2
quarkus.security.jdbc.principal-query.attribute-mappings.0.to=groups

# Protecting small-rye paths
quarkus.http.auth.permission.authenticated.paths=/health/**
quarkus.http.auth.permission.authenticated.policy=authenticated

##### BCRYPT Setup - good for production, requires some changes in the schema to include new attributes

#quarkus.security.jdbc.principal-query.sql=SELECT u.password, u.role, u.salt, u.iteration FROM test_user u WHERE u.username=?
#
#quarkus.security.jdbc.principal-query.clear-password-mapper.enabled=false
#
## Enables Bcrypt
#quarkus.security.jdbc.principal-query.bcrypt-password-mapper.enabled=true
## Sets password index
#quarkus.security.jdbc.principal-query.bcrypt-password-mapper.password-index=1
## Sets password hash encoding
#quarkus.security.jdbc.principal-query.bcrypt-password-mapper.hash-encoding=BASE64
#
## Sets salt index
#quarkus.security.jdbc.principal-query.bcrypt-password-mapper.salt-index=3
#
## Sets salt encoding
#quarkus.security.jdbc.principal-query.bcrypt-password-mapper.salt-encoding=BASE64
#
## Sets iteration count
#quarkus.security.jdbc.principal-query.bcrypt-password-mapper.iteration-count-index=4
#
#quarkus.security.jdbc.principal-query.attribute-mappings.0.index=2
#quarkus.security.jdbc.principal-query.attribute-mappings.0.to=groups
